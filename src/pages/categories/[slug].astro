<!-- ---
import Layout from '../../layouts/Layout.astro';
import categoriesData from '../../data/categories.json';
import imageToolsData from '../../data/image-tools.json'; // 导入 image-tools 数据
import ToolList from '../../components/ToolList.astro'; // 导入 ToolList 组件 (如果创建了)

export async function getStaticPaths() {
  return categoriesData.map(category => {
    return {
      params: { slug: category.slug }
    };
  });
}

interface Tool {
  name: string;
  description: string;
  url: string;
}

interface Props {
  params: { slug: string };
}
const { slug } = Astro.params;
const currentCategory = categoriesData.find(category => category.slug === slug);

if (!currentCategory) {
  return Astro.redirect('/404');
}

const pageTitle = `FastToolHub - ${currentCategory.name}`;
const pageDescription = currentCategory.description;

let currentTools : Tool[]; 
if (currentCategory.slug === 'image-tools') {
  currentTools = imageToolsData; // 如果是 image-tools 栏目，加载 imageToolsData
} else {
  //  如果不是 image-tools 栏目，可以加载其他栏目的工具数据，或者显示默认信息
  currentTools = []; //  或者可以根据 category.slug 加载不同的工具数据文件
  console.warn(`尚未实现 ${currentCategory.name} 栏目的工具列表`);
}
---

<Layout title={pageTitle} description={pageDescription}>
  <main class="container mx-auto px-4 py-10">
    <section class="mb-12">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">{currentCategory.name}</h1>
      <p class="text-lg text-gray-700">{currentCategory.description}</p>
    </section>

    <section>
      <h2 class="text-2xl font-bold text-gray-900 mb-6">工具列表</h2>
      {currentTools.length > 0 ? (
        <ToolList tools={currentTools} />  //  如果工具列表不为空，渲染 ToolList 组件
      ) : (
        <p>该栏目下的工具列表正在建设中，敬请期待...</p>  //  如果工具列表为空，显示提示信息
      )}
    </section>
  </main>
</Layout> -->